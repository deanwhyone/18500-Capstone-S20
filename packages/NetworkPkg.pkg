/*
 * 18500 Capstone S20
 * Eric Chen, Alton Olsen, Deanyone Su
 *
 * Package defining fields, constants, sizes, structures
 * of TSPIN network protocol
 */
`default_nettype none

`ifndef NETWORK_PKG_READ
`define NETWORK_PKG_READ

package NetworkPkg;
	//number of data wires
	parameter NUM_DATA_LINES = 4;

	//# bits for PID
	parameter PID_BITS  	 = 4;

	//# bits for garbage lines sent
	parameter GBG_BITS  	 = 4;

	//# bits for hold register
	parameter HLD_BITS  	 = 4;

	//# bits for piece queue
	parameter PQ_BITS   	 = 24;

	//# bits for playfield
	parameter PFD_BITS 		 = 800;

	//# bits for syncword
	parameter SYNC_BITS 	 = 16;

	//# total data bits
	parameter DATA_BITS 	 = 
		GBG_BITS + HLD_BITS + PQ_BITS + PFD_BITS;

	//# data bits per wire
	parameter PAR_DATA_BITS  = 
		DATA_BITS / NUM_DATA_LINES;

	//syncword
	parameter SYNCWORD 		= 16'hffff;

	// Packet ID's for handshaking
	typedef enum logic [PID_BITS-1:0] {
		PID_ACK = 4'b0101, PID_GE = 4'b0011, PID_X = 4'bxxxx
	} pid_t;

	// Handshake packet
	typedef struct {
		logic [SYNC_BITS-1:0] sync;
		pid_t 				  pid;
	} hnd_pkt_t;

	//single data wire packet
	typedef struct {
		logic [SYNC_BITS-1:0] 	  sync;
		logic [PAR_DATA_BITS-1:0] data;
	} par_data_pkt_t;

	//overall data packet
	typedef struct {
		logic [GBG_BITS-1:0] garbage;
		logic [HLD_BITS-1:0] hold;
		logic [PQ_BITS-1:0]  piece_queue;
		logic [PFD_BITS-1:0] playfield;
	} data_pkt_t;

endpackage // NetworkPkg

`endif